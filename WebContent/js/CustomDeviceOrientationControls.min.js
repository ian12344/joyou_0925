THREE.DeviceOrientationControls=function(object){var scope=this;this.object=object,this.object.rotation.reorder("YXZ"),this.enabled=!0,this.deviceOrientation={},this.screenOrientation=0,this.alphaOffset=0;var onDeviceOrientationChangeEvent=function(event){scope.deviceOrientation=event},onScreenOrientationChangeEvent=function(){scope.screenOrientation=window.orientation||0},setObjectQuaternion=(zee=new THREE.Vector3(0,0,1),euler=new THREE.Euler,q0=new THREE.Quaternion,q1=new THREE.Quaternion(-Math.sqrt(.5),0,0,Math.sqrt(.5)),function(quaternion,alpha,beta,gamma,orient){euler.set(beta,alpha,-gamma,"YXZ"),quaternion.setFromEuler(euler),quaternion.multiply(q1),quaternion.multiply(q0.setFromAxisAngle(zee,-orient))}),zee,euler,q0,q1;this.connect=function(){onScreenOrientationChangeEvent(),window.addEventListener("orientationchange",onScreenOrientationChangeEvent,!1),window.addEventListener("deviceorientation",onDeviceOrientationChangeEvent,!1),scope.enabled=!0},this.disconnect=function(){window.removeEventListener("orientationchange",onScreenOrientationChangeEvent,!1),window.removeEventListener("deviceorientation",onDeviceOrientationChangeEvent,!1),scope.enabled=!1},this.update=function(){if(!1!==scope.enabled){var device=scope.deviceOrientation;if(device){var alpha=device.alpha?THREE.Math.degToRad(device.alpha)+scope.alphaOffset:0,beta=device.beta?THREE.Math.degToRad(device.beta):0,gamma=device.gamma?THREE.Math.degToRad(device.gamma):0,orient=scope.screenOrientation?THREE.Math.degToRad(scope.screenOrientation):0;setObjectQuaternion(scope.object.quaternion,alpha,beta,gamma,orient)}}},this.dispose=function(){scope.disconnect()},this.connect()};